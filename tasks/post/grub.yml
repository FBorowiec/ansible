---
- name: Ensure software-properties-common is installed (Debian/Ubuntu)
  ansible.builtin.apt:
    name: software-properties-common
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Check if grub-customizer is already installed (Debian/Ubuntu)
  ansible.builtin.command: dpkg -l grub-customizer
  register: grub_customizer_check_deb
  changed_when: false
  failed_when: false
  when: ansible_os_family == "Debian"

- name: Check if grub-customizer is already installed (Arch Linux)
  ansible.builtin.command: pacman -Q grub-customizer
  register: grub_customizer_check_arch
  changed_when: false
  failed_when: false
  when: ansible_os_family == "Archlinux"

- name: Install grub-customizer from PPA (Debian/Ubuntu)
  when:
    - ansible_os_family == "Debian"
    - grub_customizer_check_deb.rc != 0
  block:
    - name: Add grub-customizer PPA
      ansible.builtin.apt_repository:
        repo: "ppa:danielrichter2007/grub-customizer"
        state: present
        update_cache: true

    - name: Install grub-customizer
      ansible.builtin.apt:
        name: grub-customizer
        state: present

    - name: Remove grub-customizer PPA
      ansible.builtin.apt_repository:
        repo: "ppa:danielrichter2007/grub-customizer"
        state: absent
        update_cache: false

- name: Install system packages and tools (Arch Linux)
  when: ansible_os_family == "Archlinux"
  community.general.pacman:
    name:
      - atkmm
      - cairomm
      - glibmm
      - gtkmm3
      - libsigc++
      - pangomm
    state: present

- name: Install grub-customizer from AUR (Arch Linux) - Manual build
  when:
    - ansible_os_family == "Archlinux"
    - grub_customizer_check_arch.rc != 0
  block:
    - name: Install base-devel group (required for AUR builds)
      ansible.builtin.pacman:
        name: base-devel
        state: present
      become: true

    - name: Create temporary build directory
      become: true
      become_user: "{{ user }}"
      ansible.builtin.tempfile:
        state: directory
        suffix: _grub_customizer
      register: build_dir

    - name: Clone grub-customizer AUR package
      become: true
      become_user: "{{ user }}"
      ansible.builtin.git:
        repo: https://aur.archlinux.org/grub-customizer.git
        dest: "{{ build_dir.path }}"
        force: true
        version: master

    - name: Build grub-customizer package only
      become: true
      become_user: "{{ user }}"
      ansible.builtin.shell: |
        cd "{{ build_dir.path }}"
        makepkg --noconfirm --needed --skippgpcheck
      args:
        executable: /bin/bash
      environment:
        HOME: "/home/{{ user }}"

    - name: Install built package with pacman
      ansible.builtin.shell: |
        cd "{{ build_dir.path }}"
        pacman -U --noconfirm *.pkg.tar.*
      args:
        executable: /bin/bash

    - name: Clean up build directory
      ansible.builtin.file:
        path: "{{ build_dir.path }}"
        state: absent
