---
- name: Ensure software-properties-common is installed (Debian/Ubuntu)
  ansible.builtin.apt:
    name: software-properties-common
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Check if grub-customizer is already installed (Debian/Ubuntu)
  ansible.builtin.command: dpkg -l grub-customizer
  register: grub_customizer_check_deb
  changed_when: false
  failed_when: false
  when: ansible_os_family == "Debian"

- name: Check if grub-customizer is already installed (Arch Linux)
  ansible.builtin.command: pacman -Q grub-customizer
  register: grub_customizer_check_arch
  changed_when: false
  failed_when: false
  when: ansible_os_family == "Archlinux"

- name: Install grub-customizer from PPA (Debian/Ubuntu)
  when:
    - ansible_os_family == "Debian"
    - grub_customizer_check_deb.rc != 0
  block:
    - name: Add grub-customizer PPA
      ansible.builtin.apt_repository:
        repo: "ppa:danielrichter2007/grub-customizer"
        state: present
        update_cache: true

    - name: Install grub-customizer
      ansible.builtin.apt:
        name: grub-customizer
        state: present

    - name: Remove grub-customizer PPA
      ansible.builtin.apt_repository:
        repo: "ppa:danielrichter2007/grub-customizer"
        state: absent
        update_cache: false

- name: Install grub-customizer from AUR (Arch Linux)
  become: true
  become_user: "{{ user }}"
  ansible.builtin.shell: |
    export GNUPGHOME="$HOME/.gnupg"
    yay -S --noconfirm --needed --norebuild grub-customizer
  args:
    creates: /usr/bin/grub-customizer
    executable: /bin/bash
  when:
    - ansible_os_family == "Archlinux"
    - grub_customizer_check_arch.rc != 0
