---
- name: Check if NordVPN is already installed
  ansible.builtin.command: which nordvpn
  register: nordvpn_check
  failed_when: false
  changed_when: false

- name: Install nordvpn
  when: nordvpn_check.rc != 0
  block:
    - name: Install nordvpn (Ubuntu/Debian)
      when: ansible_os_family == "Debian"
      block:
        - name: Add NordVPN GPG key
          ansible.builtin.get_url:
            url: https://repo.nordvpn.com/gpg/nordvpn_public.asc
            dest: /etc/apt/trusted.gpg.d/nordvpn.asc
            mode: "0644"

        - name: Add NordVPN repository
          ansible.builtin.apt_repository:
            repo: "deb https://repo.nordvpn.com/deb/nordvpn/debian stable main"
            state: present
            filename: nordvpn

        - name: Update apt cache
          ansible.builtin.apt:
            update_cache: true

        - name: Install NordVPN package
          ansible.builtin.apt:
            name: nordvpn
            state: present
            install_recommends: true

    - name: Install nordvpn (Arch Linux)
      when: ansible_os_family == "Archlinux"
      block:
        - name: Install wireguard-tools (required for NordLynx)
          community.general.pacman:
            name: wireguard-tools
            state: present

        - name: Get nordvpn-bin PKGBUILD from AUR
          ansible.builtin.uri:
            url: "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=nordvpn-bin"
            method: GET
            return_content: true
          register: pkgbuild

        - name: Debug PKGBUILD content
          debug:
            msg: "PKGBUILD content retrieved: {{ pkgbuild.content[:200] }}..."
          when: pkgbuild.content is defined

        - name: Extract PGP keys using shell (alternative)
          ansible.builtin.shell: |
            echo "{{ pkgbuild.content }}" | grep -oP "validpgpkeys=\(\K[^)]+" | tr -d "'" | tr ' ' '\n' | grep -E '^[A-F0-9]{8,}$'
          register: pgp_keys_output
          failed_when: false
          when: pkgbuild.content is defined

        - name: Set PGP keys from shell output
          set_fact:
            nordvpn_pgp_keys: "{{ pgp_keys_output.stdout_lines }}"
          when:
            - pgp_keys_output is defined
            - pgp_keys_output.stdout_lines is defined
            - pgp_keys_output.stdout_lines | length > 0

        - name: Set empty PGP keys list if extraction failed
          set_fact:
            nordvpn_pgp_keys: []
          when: nordvpn_pgp_keys is not defined

        - name: Import NordVPN PGP key(s)
          become: true
          become_user: "{{ user }}"
          ansible.builtin.shell: |
            gpg --keyserver keyserver.ubuntu.com --recv-keys {{ item }}
          environment:
            HOME: "/home/{{ user }}"
            USER: "{{ user }}"
          loop: "{{ nordvpn_pgp_keys }}"
          when: nordvpn_pgp_keys | length > 0

        - name: Install NordVPN via yay (non-interactive)
          become: true
          become_user: "{{ user }}"
          ansible.builtin.shell: |
            yay -S --sudoloop --noconfirm --needed nordvpn-bin
          environment:
            HOME: "/home/{{ user }}"
            USER: "{{ user }}"
          args:
            creates: /usr/sbin/nordvpn

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Wait for Docker service to be available
      ansible.builtin.wait_for:
        timeout: 10

    - name: Enable and start nordvpnd service
      ansible.builtin.systemd:
        name: nordvpnd
        enabled: true
        state: started
      when: not container_check.stat.exists

    - name: Add user to nordvpn group
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: nordvpn
        append: true
