---
- name: Ensure dependencies are installed
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
    state: present

- name: Check if Docker is already present.
  ansible.builtin.command: which docker
  failed_when: false
  changed_when: false
  check_mode: false
  register: docker_command_result

- name: Download Docker install convenience script.
  ansible.builtin.get_url:
    url: https://get.docker.com/
    dest: /tmp/get-docker.sh
    mode: "0775"
  when: docker_command_result.rc == 1

- name: Run Docker install convenience script.
  ansible.builtin.command: /tmp/get-docker.sh
  environment:
    CHANNEL: stable
  when: docker_command_result.rc == 1

- name: Add docker to sudoers
  shell: "groupadd docker"

- name: Add user to docker group
  shell: "usermod -aG docker {{ main_user }}"

# reset_connection doesn't support conditionals.
- name: Reset connection so docker group is picked up.
  ansible.builtin.meta: reset_connection

- name: Check if Helm is installed.
  ansible.builtin.command: which helm
  failed_when: false
  changed_when: false
  check_mode: false
  register: helm_command_results

- name: Download Helm Install Script.
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    dest: /tmp/get_helm.sh
    mode: "0775"
  when: helm_command_results.rc == 1

- name: Run Helm install Script.
  ansible.builtin.command: /tmp/get_helm.sh
  when: helm_command_results.rc == 1

- name: Check if Kubectl is installed.
  ansible.builtin.command: which kubectl
  failed_when: false
  changed_when: false
  check_mode: false
  register: kubectl_command_results

- name: Add an apt signing key for Kubernetes
  ansible.builtin.apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  ansible.builtin.apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  ansible.builtin.apt:
    name: "kubectl"
    state: present
    update_cache: true
  vars:
    packages:
      - kubectl
  when: kubectl_command_results.rc == 1
