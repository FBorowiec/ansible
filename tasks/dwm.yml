---
- name: Install picom deps
  become: True
  apt:
    update_cache: yes
    name: ["libxext-dev", "libxcb1-dev", "libxcb-damage0-dev", "libxcb-xfixes0-dev", "libxcb-shape0-dev", "libxcb-render-util0-dev", "libxcb-render0-dev", "libxcb-randr0-dev", "libxcb-composite0-dev", "libxcb-image0-dev", "libxcb-present-dev", "libxcb-xinerama0-dev", "libxcb-glx0-dev", "libpixman-1-dev", "libdbus-1-dev", "libconfig-dev", "libgl1-mesa-dev", "libpcre2-dev", "libpcre3-dev", "libevdev-dev", "uthash-dev", "libev-dev", "libx11-xcb-dev", "meson"]
  tags:
  - dwm
- name: Install dwm deps
  become: true
  apt:
    update_cache: yes
    name: ["meson", "suckless-tools", "stterm", "libpulse-dev", "xsettingsd"]
  tags:
  - dwm
- name: Clone picom
  become: yes
  become_user: "{{ main_user }}"
  ansible.builtin.git:
    repo: 'https://github.com/yshui/picom.git'
    dest: "{{ main_user_dir }}/picom"
  tags:
   - dwm
- name: Build picom
  become: yes
  become_user: "{{ main_user }}"
  shell: "cd {{ main_user_dir }}/picom && meson --buildtype=release . build && ninja -C build"
  tags:
    - dwm
- name: Install picom
  shell: "cd {{ main_user_dir }}/picom && ninja -C build install"
  become: true
  tags:
    - dwm
- name: Clone pamixer
  become: yes
  become_user: "{{ main_user }}"
  ansible.builtin.git:
    repo: 'https://github.com/cdemoulins/pamixer.git'
    dest: "{{ main_user_dir }}/pamixer"
  tags:
   - dwm
- name: Build pamixer
  become: yes
  become_user: "{{ main_user }}"
  shell: "cd {{ main_user_dir }}/pamixer && meson setup build"
  tags:
    - dwm
- name: Install pamixer
  shell: "cd {{ main_user_dir }}/pamixer && meson install -C build"
  become: true
  tags:
    - dwm
- name: dwm - Clone
  become: yes
  become_user: "{{ main_user }}"
  ansible.builtin.git:
    repo: "https://github.com/bakkeby/dwm-flexipatch.git"
    dest: "{{ main_user_dir }}/dwm"
  tags:
    - dwm
# - name: dwm - config.h
#   copy:
#     src: files/dwm/config.def.h
#     dest: "{{ main_user_dir }}/dwm"
#   tags:
#     - dwm
- name: dwm - patches.h
  copy:
    src: files/dwm/patches.def.h
    dest: "{{ main_user_dir }}/dwm"
  tags:
    - dwm
- name: dwm - Install dwm dependencies
  become: true
  apt:
    pkg:
      - libx11-dev
      - libxft-dev
      - libxinerama-dev
  tags:
    - dwm
- name: dwm - Build
  become: yes
  become_user: "{{ main_user }}"
  shell: "cd {{ main_user_dir }}/dwm && make"
  tags:
    - dwm
- name: dwm - Install
  become: true
  shell: "cd {{ main_user_dir }}/dwm && make install"
  tags:
    - dwm
- name: dwm - dwm.desktop
  become: true
  copy:
    src: dwm.desktop
    dest: /usr/share/xsessions
  tags:
    - dwm
