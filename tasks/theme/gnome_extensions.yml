---
- name: Install GNOME extension {{ extension_id }}
  block:
    - name: Check if extension is already installed
      become: true
      become_user: "{{ user }}"
      ansible.builtin.command: "gnome-extensions list"
      register: installed_exts
      changed_when: false
      environment:
        DISPLAY: "{{ display | default(':0') }}"
        DBUS_SESSION_BUS_ADDRESS: "{{ dbus_address | default('') }}"

    - name: Process extension if not installed
      when: ext_uuid is not defined or ext_uuid not in installed_exts.stdout
      block:
        - name: Fetch extension info
          become: true
          become_user: "{{ user }}"
          ansible.builtin.uri:
            url: "https://extensions.gnome.org/extension-info/?pk=\
              {{ extension_id }}&shell_version={{ shell_version }}"
            return_content: true
          register: ext_info
          failed_when: ext_info.status == 404

        - name: Parse extension info
          become: true
          become_user: "{{ user }}"
          ansible.builtin.set_fact:
            extension_name: "{{ (ext_info.content | from_json).name }}"
            download_url: "https://extensions.gnome.org{{ (ext_info.content \
              | from_json).download_url }}"
            ext_uuid: "{{ (ext_info.content | from_json).uuid }}"

        - name: Download extension
          become: true
          become_user: "{{ user }}"
          ansible.builtin.get_url:
            url: "{{ download_url }}"
            dest: "/tmp/{{ extension_id }}.zip"
            mode: "0644"

        - name: Install extension
          become: true
          become_user: "{{ user }}"
          ansible.builtin.command: "gnome-extensions install \
            /tmp/{{ extension_id }}.zip --force"
          changed_when: false
          environment:
            DISPLAY: "{{ display | default(':0') }}"
            DBUS_SESSION_BUS_ADDRESS: "{{ dbus_address | default('') }}"

        - name: Enable extension
          become: true
          become_user: "{{ user }}"
          ansible.builtin.command: "gnome-extensions enable {{ ext_uuid }}"
          changed_when: false
          environment:
            DISPLAY: "{{ display | default(':0') }}"
            DBUS_SESSION_BUS_ADDRESS: "{{ dbus_address | default('') }}"

    - name: Clean up extension archive
      become: true
      become_user: "{{ user }}"
      ansible.builtin.file:
        path: "/tmp/{{ extension_id }}.zip"
        state: absent
