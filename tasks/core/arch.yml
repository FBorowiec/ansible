---
- name: Update and upgrade pacman packages
  community.general.pacman:
    update_cache: true
    upgrade: true
  when: ansible_os_family == "Archlinux"

- name: Arch-specific core tasks
  when: ansible_os_family == "Archlinux"
  block:
    - name: Install system packages and tools (Arch Linux)
      community.general.pacman:
        name:
          - bat
          - base-devel
          - curl
          - ca-certificates
          - gettext
          - fzf
          - git
          - git-lfs
          - go
          - jq
          - lsd
          - ripgrep
          - fastfetch
          - net-tools
          - nvidia-settings
          - openssh
          - sed
          - stow
          - unzip
          - vlc
          - wget
          - xclip
        state: present

    - name: Update CA certificates trust store
      ansible.builtin.command: update-ca-trust
      changed_when: false

    - name: Install i3 and required packages (Arch Linux)
      community.general.pacman:
        name:
          - i3-wm
          - i3status
          - i3blocks
          - feh
          - rofi
          - picom
          - pipewire-pulse
          - pavucontrol
          - xorg-xbacklight
          - flameshot
          - dunst
          - redshift
          - autorandr
          - polybar
          - playerctl
          - gtk-engine-murrine
          - gtk-engines
          - xsettingsd
        state: present
        update_cache: true

    - name: Install additional tools (Arch Linux)
      community.general.pacman:
        name:
          - btop
          - markdownlint
          - spotify-launcher
        state: present
        update_cache: true

    - name: Install snap packages (Arch Linux)
      block:
        - name: Install build dependencies
          community.general.pacman:
            name:
              - squashfs-tools
              - apparmor
              - go-tools
              - xfsprogs
              - python-docutils
              - autoconf-archive
            state: present

        - name: Clone snapd from AUR
          become: true
          become_user: "{{ user }}"
          ansible.builtin.git:
            repo: https://aur.archlinux.org/snapd.git
            dest: /tmp/snapd
            depth: 1
            force: true
            version: master

        - name: Build snapd package
          become: true
          become_user: "{{ user }}"
          ansible.builtin.shell: |
            cd /tmp/snapd
            makepkg --noconfirm
          register: build_result
          args:
            creates: /tmp/snapd/pkg/snapd

        - name: Find built package file
          ansible.builtin.find:
            paths: /tmp/snapd
            patterns: "*.pkg.tar.*"
            excludes: "*debug*"
          register: package_files

        - name: Install snapd package with pacman
          ansible.builtin.shell: |
            pacman -U "{{ package_files.files[0].path }}" --noconfirm
          register: install_result
          failed_when: install_result.rc != 0
          args:
            creates: /usr/bin/snap

        - name: Reload systemd daemon
          ansible.builtin.systemd:
            daemon_reload: true

        - name: Wait for Docker service to be available
          ansible.builtin.wait_for:
            timeout: 10

        - name: Enable and start snapd service
          ansible.builtin.systemd:
            name: snapd
            enabled: true
            state: started
          when: not container_check.stat.exists

        - name: Enable and start snapd.socket
          ansible.builtin.systemd:
            name: snapd.socket
            enabled: true
            state: started
          when: not container_check.stat.exists

        - name: Enable and start snapd.apparmor.service
          ansible.builtin.systemd:
            name: snapd.apparmor.service
            enabled: true
            state: started
          when: not container_check.stat.exists

        - name: Create symbolic link for classic snaps
          ansible.builtin.file:
            src: /var/lib/snapd/snap
            dest: /snap
            state: link
          when: not container_check.stat.exists

        - name: Install snap packages
          when: not container_check.stat.exists
          community.general.snap:
            name:
              - teams-for-linux
            state: present
