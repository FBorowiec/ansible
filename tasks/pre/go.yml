---
- name: Check if Go is already installed with correct version
  ansible.builtin.command: /usr/local/go/bin/go version
  register: go_version_check
  changed_when: false
  failed_when: false

- name: Install Go
  when: go_version_check.rc != 0
  block:
    - name: Set Go download URL and filename
      ansible.builtin.set_fact:
        go_filename: "go{{ tools_versions.go }}.linux-amd64.tar.gz"
        go_url: >
          https://go.dev/dl/go{{ tools_versions.go }}.linux-amd64.tar.gz

    - name: Download Go archive
      ansible.builtin.get_url:
        url: "{{ go_url }}"
        dest: "/tmp/{{ go_filename }}"
        mode: "0644"
        timeout: 300

    - name: Remove existing Go installation
      become: true
      ansible.builtin.file:
        path: /usr/local/go
        state: absent
      when: go_version_check.rc == 0

    - name: Extract Go archive
      become: true
      ansible.builtin.unarchive:
        src: "/tmp/{{ go_filename }}"
        dest: "/usr/local"
        remote_src: true
        owner: root
        group: root
        creates: "/usr/local/go/bin/go"

    - name: Clean up downloaded archive
      ansible.builtin.file:
        path: "/tmp/{{ go_filename }}"
        state: absent

- name: Ensure Go is in system PATH
  become: true
  ansible.builtin.copy:
    content: |
      export PATH="/usr/local/go/bin:$PATH"
    dest: /etc/profile.d/go.sh
    mode: "0644"
    owner: root
    group: root

- name: Create GOPATH directory for main user
  become: true
  become_user: "{{ user }}"
  ansible.builtin.file:
    path: "{{ home }}/go"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0755"
