#!/usr/bin/env bash

set -e

REPO_ROOT="$(git rev-parse --show-toplevel 2>/dev/null)"
IMAGE_PREFIX="ansible-test"
INTERACTIVE=false
OS_CHOICE="both"

usage() {
	echo "Usage: $0 [-i|--interactive] [-o|--os ubuntu|arch|both]"
	echo "  -i, --interactive    Start interactive container"
	echo "  -o, --os OS         Choose OS to test (ubuntu, arch, or both) [default: both]"
}

while [[ $# -gt 0 ]]; do
	case $1 in
	-i | --interactive)
		INTERACTIVE=true
		shift
		;;
	-o | --os)
		OS_CHOICE="$2"
		if [[ "$OS_CHOICE" != "ubuntu" && "$OS_CHOICE" != "arch" && "$OS_CHOICE" != "both" ]]; then
			echo "ERROR: OS choice must be 'ubuntu', 'arch', or 'both'"
			usage
			exit 1
		fi
		shift 2
		;;
	-h | --help)
		usage
		exit 0
		;;
	*)
		echo "Unknown option $1"
		usage
		exit 1
		;;
	esac
done

check_success() {
	local exit_code=$?
	if [ "$exit_code" -ne 0 ]; then
		echo "ERROR: $1 failed with exit code $exit_code" >&2
		return "$exit_code"
	fi
	return 0
}

docker_cleanup() {
	local image_name="$1"
	docker stop "$image_name" 2>/dev/null || true
	docker rm "$image_name" 2>/dev/null || true
	docker rmi -f "$image_name" 2>/dev/null || true
}

build_and_test_os() {
	local os="$1"
	local dockerfile="$2"
	local image_name="${IMAGE_PREFIX}-${os}"

	echo "=== Testing $os ==="

	docker_cleanup "$image_name"
	docker build "$REPO_ROOT" \
		--network host \
		--file "$dockerfile" \
		--tag "$image_name"
	check_success "Building $os test docker image"

	local common_flags=(
		--privileged
		--network host
		--rm
		--name "$image_name"
		--cgroupns=host
		-e ANSIBLE_VAULT_PASSWORD="${ANSIBLE_VAULT_PASSWORD:-}"
		-e ANSIBLE_BECOME_PASS="${ANSIBLE_BECOME_PASS:-}"
		-v /var/run/docker.sock:/var/run/docker.sock
		-v /sys/fs/cgroup:/sys/fs/cgroup:rw
		--tmpfs /tmp
		--tmpfs /run
	)
	if [[ "$INTERACTIVE" == "true" ]]; then
		echo "Starting interactive $os container..."
		docker run "${common_flags[@]}" -it "$image_name":latest /bin/bash
	else
		docker run "${common_flags[@]}" "$image_name":latest /bin/bash install
		check_success "Test ansible setup on $os"
		echo "$os test install passed successfully."
	fi
}

if [[ "$INTERACTIVE" == "false" ]]; then
	[[ -z "$ANSIBLE_VAULT_PASSWORD" ]] && {
		echo "Enter vault password:"
		read -rs ANSIBLE_VAULT_PASSWORD
		export ANSIBLE_VAULT_PASSWORD
	}
	[[ -z "$ANSIBLE_BECOME_PASS" ]] && {
		echo "Enter become (sudo) password:"
		read -rs ANSIBLE_BECOME_PASS
		export ANSIBLE_BECOME_PASS
	}
fi

case "$OS_CHOICE" in
ubuntu)
	build_and_test_os "ubuntu" "$REPO_ROOT/test/dockerfiles/ubuntu.Dockerfile"
	;;
arch)
	build_and_test_os "arch" "$REPO_ROOT/test/dockerfiles/arch.Dockerfile"
	;;
both)
	echo "=== Testing Ubuntu and Arch Linux installs ==="
	if [[ "$INTERACTIVE" == "true" ]]; then
		echo "Interactive mode only supports one OS at a time."
		echo "Please choose either --os ubuntu or --os arch for interactive mode."
		exit 1
	fi
	build_and_test_os "ubuntu" "$REPO_ROOT/test/dockerfiles/ubuntu.Dockerfile"
	echo ""
	build_and_test_os "arch" "$REPO_ROOT/test/dockerfiles/arch.Dockerfile"
	echo ""
	echo "All tests passed successfully!"
	;;
esac

exit 0
